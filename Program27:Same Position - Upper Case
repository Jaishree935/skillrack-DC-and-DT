Same Position - Upper Case 

Question:
The program must accept two string values S1 and S2 of equal length as the input. 
The program must print the characters in S1 where the characters in the same position in S2 are in upper case. Similarly, the program must print the characters in S2 where the characters in the same position in S1 are upper case.
 
Note: 
At least one upper case alphabet is always present in any of the given string values. 

Boundary Condition(s): 
1 <= Length of S1, S2 <= 1000 

Input Format: 
The first line contains S1. 
The second line contains S2. 
Output Format: 
The first line contains a string value. 

Example Input/Output 1: 
Input: 
SkillRack 
EduCaTION 
Output: 
SlRackET 

Explanation: 
Here S1 = SkillRack and S2 = EduCaTION. 
In S2, the upper case alphabets are present in the positions 1, 4, 6, 7, 8 and 9. 
So the characters present in these 6 positions in S1 are printed. 
SlRack In S1, the upper case alphabets are present in the positions 1 and 6. 
So the characters present in these 2 positions in S2 are printed. 
ET Hence the output is SlRackET 
Example Input/Output 2: 
Input: 
MicTestinG#123 
spInach@FRUITS 
Output: cnG#123snR

code:
import java.util.*;
public class Hello {

    public static void main(String[] args) {
		 
      Scanner s= new Scanner(System.in);
      String S1=s.nextLine();
      String S2=s.nextLine();
     
      char[] c1=S1.toCharArray();
      char[] c2=S2.toCharArray();
      StringBuilder sb= new StringBuilder();
      for(char i=0;i<c2.length;i++){
          if(Character.isUpperCase(c2[i])){
              sb.append(c1[i]);
          }
      }
      for(char j=0;j<c1.length;j++){
          if(Character.isUpperCase(c1[j])){
              sb.append(c2[j]);
          }
      }
      System.out.print(sb.toString());
	}
}
