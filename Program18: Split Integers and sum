Split Integers & Sum

Problem Statement
The program must accept N integers and an integer D as input. The program must split the integers into separate lines based on the condition that the total number of digits in the integers on each line must be less than or equal to D. At the end of each line, the program must print the sum of the integers in that line.

Input Format
The first line contains an integer N, the number of integers.
The second line contains N integers separated by a space.
The third line contains the integer D.

Output Format
For each line:
Print as many integers as possible on that line such that the total number of digits does not exceed D.
After the integers on each line, print the sum of those integers.

Boundary Conditions
Example Input and Output
Example 1
Input:
8
14 790 13 9 309 70 510 118
10
Output:
14 790 13 9 826
309 70 510 889
118 118
Example 2
Input:
7
192 9754 18 4 97578 2024 10268
13
Output:
192 9754 18 4 9968
97578 2024 99602
10268 10268


code:
import java.util.*;
public class Hello {

    public static void main(String[] args) {
		 
       Scanner s=new Scanner(System.in);
       int n=s.nextInt();
       int[] a=new int[n];
       for(int i=0;i<n;i++){
           a[i]=s.nextInt();
       }
       int d=s.nextInt();
       int s1=0,num=0;
       for(int i=0;i<a.length;i++){
           int k=String.valueOf(a[i]).length();
           if((s1+k)<=d){
               s1+=k;
               System.out.print(a[i]+" ");
               num+=a[i];
           }
           else{
               System.out.println(num);
               num=a[i];
               s1=k;
               System.out.print(a[i]+" ");
           }
       }
       if(num>0){
           System.out.print(num);
       }
	}
}
