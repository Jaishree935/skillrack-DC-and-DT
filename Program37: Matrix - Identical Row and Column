Matrix - Identical Row and Column
The program must accept an integer matrix of size N √ó N as input.
The program must print "YES" if at least one row is identical to one column in the given matrix.
Otherwise, the program must print "NO" as the output.

Boundary Conditions
2‚â§ùëÅ‚â§50
1‚â§ Matrix element value ‚â§1000

Input Format
The first line contains an integer N (size of the matrix).
The next N lines, each containing N space-separated integers representing the matrix.
Output Format
Print "YES" if any row matches any column (even in reverse order).
Otherwise, print "NO".

Example 1
Input:
4
2 3 4 5
3 5 10 9
6 10 8 8
7 9 2 1

Output:
YES
Explanation:
The 2nd row and 2nd column are identical.
  2   3   4   5
  3   5  10   9  <-- Identical row
  6  10   8   8
  7   9   2   1  <-- Identical column
So, "YES" is printed.

Example 2
Input:
3
4 5 3
1 3 3
4 5 1

Output:
YES
Explanation:
The 2nd row [1, 3, 3] is identical to the 3rd column (bottom to top) [1, 3, 3].
So, "YES" is printed.

Example 3
Input:
5
94 54 52 97 81
54 87 92 35 72
52 35 94 63 23
97 35 87 63 76
80 72 18 72 10

Output: 
NO
Explanation:
No row matches any column, so the output is "NO".

code:
import java.util.*;
public class Hello {

    public static void main(String[] args) {
		//Your Code Here
        Scanner s= new Scanner(System.in);
        int n=s.nextInt();
        int [][] a= new int[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
            a[i][j]=s.nextInt();
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(isidentical(a,i,j,n) || isreverse(a,i,j,n)){
                    System.out.print("YES");
                    return;
                }
            }
        }
        System.out.print("NO");
    }
        private static boolean isidentical(int [][]arr,int row,int col,int num){
            for(int i=0;i<num;i++){
                if(arr[row][i]!=arr[i][col]){
                    return false;
                }
            }
            return true;
        }
	private static boolean isreverse(int[][] arr,int row,int col,int num){
	    for(int i=0;i<num;i++){
	        if(arr[row][i]!=arr[num-1-i][col]){
	            return false;
	        }
	    }
	    return true;
	}
}
