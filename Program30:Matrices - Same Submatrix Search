Matrices - Same Submatrix Search 

Question:
The program must accept two integer matrices M1, M2 and an integer T as the input. 
The size of the matrix M1 is M*N and the size of the matrix M2 is R*C. 
The program must print the T*T submatrix which occurs in both matrices. 
If two or more such submatrices occur in both matrices, then the program must print the first occurring submatrix in M1 as the output.
If there is no such submatrix, then the program must print -1 as the output. 

Boundary Condition(s):
2 <= M, N, R, C, T <= 50 1 <= Matrix element value <= 1000 

Input Format: 
The first line contains M and N separated by a space. 
The next M lines, each contains N integer values separated by a space. 
The (M+2)nd line contains R and C separated by a space. 
The next R lines, each contains C integer values separated by a space. 
The (M+R+3)rd line contains T. 

Output Format: 
The first T lines, each contains T integer values separated by a space. 

Example Input/Output 1: 
Input: 
6 6 
18 55 27 90 29 16 
90 31 60 48 64 65 
89 57 43 23 81 90 
36 11 86 70 33 76 
70 81 71 23 33 51 
37 53 80 13 33 60 
7 8 
53 23 54 47 37 28 12 10 
23 32 32 21 57 43 23 27
32 31 77 88 11 86 70 27 
69 86 10 90 81 71 23 44 
62 38 15 39 17 20 42 69 
19 57 34 83 90 21 12 89 
11 81 23 82 21 56 25 86 
3 
Output: 
57 43 23 
11 86 70 
81 71 23 

Explanation: 
Here T=3, the 3*3 submatrix which occurs in both matrices is highlighted below. 
18 55 27 90 29 16 
90 31 60 48 64 65 
89 57 43 23 81 90 
36 11 86 70 33 76 
70 81 71 23 33 51 
37 53 80 13 33 60 

53 23 54 47 37 28 12 10 
23 32 32 21 57 43 23 27 
32 31 77 88 11 86 70 27 
69 86 10 90 81 71 23 44 
62 38 15 39 17 20 42 69 
19 57 34 83 90 21 12 89 
11 81 23 82 21 56 25 86 

Example Input/Output 2: 
Input: 
4 10 
4 7 1 8 7 3 1 7 8 5 
9 4 5 9 1 2 2 3 3 4 
5 4 8 3 7 9 1 6 9 8 
7 7 5 2 6 4 7 6 7 6 
12 7 
1 7 8 5 5 8 1 
2 3 3 4 2 7 6 
1 6 9 8 9 9 1 
7 6 7 6 5 2 9 
9 1 8 2 5 6 6 
7 5 9 7 6 4 7 
5 1 4 4 5 5 6 
7 3 4 7 1 8 5 
4 9 9 4 5 9 2 
9 4 5 4 8 3 2 
5 7 7 7 5 2 8 
3 7 9 4 2 9 2 
4 

Output: 
4 7 1 8 
9 4 5 9 
5 4 8 3 
7 7 5 2 

Example Input/Output 3: 
Input: 
5 4 
2 5 1 9 
4 2 4 7 
4 4 8 2 
1 6 1 3 
4 8 5 9 
3 6 
4 8 5 6 2 2 
8 1 7 5 8 8 
1 7 5 3 8 7 
2 

Output: -1



Code:
import java.util.*;
public class Hello {

    public static void main(String[] args) {
		//Your Code Here
     Scanner s= new Scanner(System.in);
     int m=s.nextInt();
     int n=s.nextInt();
     int[][] m1 = new int[m][n];
     for(int i=0;i<m;i++){
         for(int j=0;j<n;j++){
             m1[i][j]=s.nextInt();
         }
     }
     int r=s.nextInt();
     int c=s.nextInt();
     int[][] m2= new int[r][c];
     for(int i=0;i<r;i++)
     {
         for(int j=0;j<c;j++){
             m2[i][j]=s.nextInt();
         }
     }
     int t=s.nextInt();
     Set<String> sc= new HashSet<>();
     for(int i=0;i<=r-t;i++){
         for(int j=0;j<=c-t;j++){
             StringBuilder sb= new StringBuilder();
             for(int x=0;x<t;x++){
                 for(int y=0;y<t;y++){
                     sb.append(m2[i+x][j+y]).append(",");
                 }
             }
             sc.add(sb.toString());
         }
     }
     for(int i=0;i<=m-t;i++){
         for(int j=0;j<=n-t;j++){
             StringBuilder sb= new StringBuilder();
             for(int x=0;x<t;x++){
                 for(int y=0;y<t;y++){
                     sb.append(m1[i+x][j+y]).append(",");
                 }
             }
             if(sc.contains(sb.toString())){
                 for(int x=0;x<t;x++){
                     for(int y=0;y<t;y++){
                         System.out.print(m1[i+x][j+y]+" ");
                     }
                     System.out.println();
                 }
                 return;
             }
         }
     }
     System.out.println("-1");
	}
}
